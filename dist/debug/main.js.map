{"version":3,"sources":["../../scripts/main.ts","../../scripts/Utilities.ts"],"sourcesContent":["import { world, system, BlockPermutation, ButtonPushAfterEvent } from \"@minecraft/server\";\nimport Utilities from \"./Utilities\";\n\nlet ticksSinceLoad = 0;\n\nconst ZooMobList = [\"aop_mobs:biceson\", \"aop_mobs:frost_moose\", \"aop_mobs:sheepomelon\"];\n\nfunction mainTick() {\n  ticksSinceLoad++;\n\n  if (ticksSinceLoad === 100) {\n    world.sendMessage(\"Welcome to the wacky zoo!\");\n    initialize();\n  }\n\n  system.run(mainTick);\n}\n\nfunction getTriggerLoc() {\n  const spawnLoc = world.getDefaultSpawnLocation();\n\n  const x = spawnLoc.x - 5;\n  const z = spawnLoc.z - 5;\n  const y = findTopmostBlockUsingPlayer(x, z);\n\n  return { x: x, y: y, z: z };\n}\n\nfunction getZooLoc() {\n  const spawnLoc = world.getDefaultSpawnLocation();\n  const x = spawnLoc.x - 25;\n  const z = spawnLoc.z - 25;\n  const y = findTopmostBlockUsingPlayer(x, z);\n\n  return { x: x, y: y, z: z };\n}\n\nfunction findTopmostBlockUsingPlayer(x: number, z: number) {\n  const ow = world.getDimension(\"overworld\");\n\n  let y = -60;\n\n  const players = world.getPlayers();\n\n  // use a little bit below the player's Y to suggest a location. Move upward until we find air.\n  if (players.length > 0) {\n    y = Math.max(players[0].location.y - 8, -62);\n\n    let block = ow.getBlock({ x: x, y: y, z: z });\n\n    while (block && !block.permutation.matches(\"minecraft:air\")) {\n      y++;\n\n      block = ow.getBlock({ x: x, y: y, z: z });\n    }\n  }\n\n  return y;\n}\n\nfunction initialize() {\n  const overworld = world.getDimension(\"overworld\");\n\n  const triggerLoc = getTriggerLoc();\n\n  // set up a button on cobblestone\n  const cobblestone = overworld.getBlock(triggerLoc);\n  const button = overworld.getBlock({ x: triggerLoc.x, y: triggerLoc.y + 1, z: triggerLoc.z });\n\n  if (cobblestone === undefined || button === undefined) {\n    console.warn(\"Could not load the position to place our switch.\");\n    return -1;\n  }\n  world.sendMessage(\"Adding a button at x: \" + triggerLoc.x + \" y:\" + triggerLoc.y + \" z: \" + triggerLoc.z);\n  cobblestone.setPermutation(BlockPermutation.resolve(\"cobblestone\"));\n  button.setPermutation(BlockPermutation.resolve(\"acacia_button\", { facing_direction: 1 } /* up */));\n\n  world.afterEvents.buttonPush.subscribe(spawnZoo);\n}\n\nfunction spawnZoo() {\n  const zooLoc = getZooLoc();\n\n  const overworld = world.getDimension(\"overworld\");\n\n  Utilities.fourWalls(\n    BlockPermutation.resolve(\"minecraft:glass\"),\n    zooLoc.x - 20,\n    zooLoc.y + 20,\n    zooLoc.z - 20,\n    zooLoc.x,\n    zooLoc.y,\n    zooLoc.z\n  );\n\n  let mobLoc = { x: zooLoc.x - 2, y: zooLoc.y, z: zooLoc.z - 2 };\n\n  for (const mob of ZooMobList) {\n    world.sendMessage(\"Spawning mob: \" + mob);\n    overworld.spawnEntity(mob, mobLoc);\n\n    mobLoc = { x: mobLoc.x - 2, y: mobLoc.y + 1, z: mobLoc.z - 2 };\n  }\n}\n\nsystem.run(mainTick);\n","import { world, BlockPermutation } from \"@minecraft/server\";\n\nexport default class Utilities {\n  static fillBlock(\n    blockPerm: BlockPermutation,\n    xFrom: number,\n    yFrom: number,\n    zFrom: number,\n    xTo: number,\n    yTo: number,\n    zTo: number\n  ) {\n    const overworld = world.getDimension(\"overworld\");\n\n    for (let i = xFrom; i <= xTo; i++) {\n      for (let j = yFrom; j <= yTo; j++) {\n        for (let k = zFrom; k <= zTo; k++) {\n          overworld.getBlock({ x: i, y: j, z: k })?.setPermutation(blockPerm);\n        }\n      }\n    }\n  }\n\n  static fourWalls(\n    perm: BlockPermutation,\n    xFrom: number,\n    yFrom: number,\n    zFrom: number,\n    xTo: number,\n    yTo: number,\n    zTo: number\n  ) {\n    const overworld = world.getDimension(\"overworld\");\n\n    const xFromP = Math.min(xFrom, xTo);\n    const xToP = Math.max(xFrom, xTo);\n    const yFromP = Math.min(yFrom, yTo);\n    const yToP = Math.max(yFrom, yTo);\n    const zFromP = Math.min(zFrom, zTo);\n    const zToP = Math.max(zFrom, zTo);\n\n    for (let i = xFromP; i <= xToP; i++) {\n      for (let k = yFromP; k <= yToP; k++) {\n        overworld.getBlock({ x: i, y: k, z: zFromP })?.setPermutation(perm);\n        overworld.getBlock({ x: i, y: k, z: zToP })?.setPermutation(perm);\n      }\n    }\n\n    for (let j = zFromP + 1; j < zToP; j++) {\n      for (let k = yFromP; k <= yToP; k++) {\n        overworld.getBlock({ x: xFromP, y: k, z: j })?.setPermutation(perm);\n        overworld.getBlock({ x: xToP, y: k, z: j })?.setPermutation(perm);\n      }\n    }\n  }\n}\n"],"mappings":"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","names":["world","BlockPermutation","world","BlockPermutation"],"file":"../scripts/main.js"}